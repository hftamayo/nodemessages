swagger: "2.0"
info:
  description: "Post messages, backend on Node.JS"
  version: "0.0.1"
  title: "Post messages"
  termsOfService: "Not available"
  contact: 
    name: "Herbert Fernandez Tamayo"
    email: "hftamayo@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3006"
basePath: "/"
schemes:
- "http"
- "https"
tags:
- name: "get posts"
  description: "get all available post messages"
paths:
  /feed/posts:
    get:
      tags:
      - "get posts"
      summary: "Returns all available posts"
      description: "Return all available posts"
      operationId: "posts"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Fetched posts successfully"
        "500":
          description: "no descriptive error thrown"
  /feed/post:
    post:
      tags:
      - "new post"
      summary: "Create a new post message"
      description: "send the required fields for a new post"
      operationId: "post"
      produces:
      - "application/json"
      parameters:
        - "in": "body"
          "name": "post"
          "description": "post to create"
          "schema":
             type: object
             required:
             - title
             - imageUrl
             - content
             properties:
               title:
                  type: string
               imageUrl:
                  type: string
               content:
                  type: string
      responses:
        "201":
          description: "Post created successfully, id, title, content"
        "500":
          description: "no descriptive error thrown"
  /feed/post/{postId}:
    delete:
      tags:
      - "get post"
      summary: "display a post found by id"
      description: "display a post found by id, try these ones: 63766f7ac91610c4f5a76c23 | 637fc0c84585f13ec43d53af"
      operationId: "get"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: postId
          required: true
          description: post to find
          type: string

      responses:
        "200":
          description: "Post fetched | deleted post"
        "404":
          description: "Could not find post"
        "500":
          description: "no descriptive error thrown"          
  /feed/post/{postId}:
    put:
      tags:
      - "update a post"
      summary: "update a post found by id"
      description: "update a post found by id, try these one: 63766f7ac91610c4f5a76c23"
      operationId: "put"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: postId
          required: true
          description: post to find
          type: string
      requestBody:
         required: true
         content:
            application/json:
               schema:
                  $ref: '#components/schemas/Book'
      responses:
        "200":
          description: "Post updated sucessfully"
          content:
             application/json:
                schema:
                   type: array
                   items:
                      $ref: '#components/schemas/Book'
                   
        "404":
          description: "Could not find post"
        "500":
          description: "no descriptive error thrown"

definitions:
  Post:
    type: "object"
    required:
    - "title"
    - "content"
    properties:
      id:
        type: "integer"
        format: "mm/dd/yy hh:mm:ss"
      title:
        type: "string"
        example: "rest api with go"
      imageUrl:
        type: "string"
        example: "images/piquina.png"
      content:
        type: "string"
        example: "this is a great book"
